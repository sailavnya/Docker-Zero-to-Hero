How to run multiple docker compose on same machine
What is build context
What is run context
Flow of request when you type docker commands
How to connect to different daemons on demand through same docker client
Env vs Build arguments
How to pass arguments to containers which do not get persisted in the containter after build stage
How env is different than arg 
What is â€”build-arg 
What are docker buildx
What is scratch image
What is distroless image
How do you mount a docker secret
Restart policy in docker


Question: what are real-time challanges with docker?
Ans. Docker has a single point of failure. If docker daemon goes down, application is down. 
- docker run as root user which is a security threat.
- resource constraints - if you are running too many containers on a single host, you may experience resource constraints. This can lead to slow performance or crashes.

Solution is podman. Which solves your docker problem. It is not single point failure, it can run as normal non-root user.


Ques. What steps you will take to secure containers?
Ans. 
1. Use distroless or image with not too many packages as your final image in multi stage build.
2. Ensure that networking is configured properly. If required configure custom bridge network and assign them to isolate networks. Create different bridge network for finance application.

3. Use utilities like Sync to scan your container images. Before you push them to production or staging environment.

Question. What is multi stage build in docker ?
Ans. Concept of container itself is to keep it lightweight. 
Multi stage build allows you to build your docker container in multiple stages allowing you to copy artifacts from one stage to other. The major advantages of this is to build light weight containers. All dependencies and heavy base image were required only in build stage 
Final application build artifact(jar file) requires only Java runtime, not the dependencies required to build the application.
So, final image size will drop from 800 MB to 20 mb.

Ques. What are distroless images in docker 
Ans. Containers are also  exposed to security vulnerabilities, cuz they are minimal os, still. Some images such as ubuntu comes with os related vulnerabilities or MySQL related dependencies.
To solve this, image size was further shrunk. Distroless image are very very minimal such as scratch are hardly 1-2 mb. Instead of base image use distroless image. You don't even have basic command such as apt.

**Using --network=secure-network will not create any type of secure network, its a new Bridge connection name. It will be isolated.**

